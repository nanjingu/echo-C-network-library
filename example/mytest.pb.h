// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mytest.proto

#ifndef PROTOBUF_INCLUDED_mytest_2eproto
#define PROTOBUF_INCLUDED_mytest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_mytest_2eproto 

namespace protobuf_mytest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_mytest_2eproto
namespace example {
class myRequest;
class myRequestDefaultTypeInternal;
extern myRequestDefaultTypeInternal _myRequest_default_instance_;
class myResponse;
class myResponseDefaultTypeInternal;
extern myResponseDefaultTypeInternal _myResponse_default_instance_;
}  // namespace example
namespace google {
namespace protobuf {
template<> ::example::myRequest* Arena::CreateMaybeMessage<::example::myRequest>(Arena*);
template<> ::example::myResponse* Arena::CreateMaybeMessage<::example::myResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace example {

// ===================================================================

class myRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.myRequest) */ {
 public:
  myRequest();
  virtual ~myRequest();

  myRequest(const myRequest& from);

  inline myRequest& operator=(const myRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  myRequest(myRequest&& from) noexcept
    : myRequest() {
    *this = ::std::move(from);
  }

  inline myRequest& operator=(myRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const myRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const myRequest* internal_default_instance() {
    return reinterpret_cast<const myRequest*>(
               &_myRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(myRequest* other);
  friend void swap(myRequest& a, myRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline myRequest* New() const final {
    return CreateMaybeMessage<myRequest>(NULL);
  }

  myRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<myRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const myRequest& from);
  void MergeFrom(const myRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(myRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string opt = 3;
  bool has_opt() const;
  void clear_opt();
  static const int kOptFieldNumber = 3;
  const ::std::string& opt() const;
  void set_opt(const ::std::string& value);
  #if LANG_CXX11
  void set_opt(::std::string&& value);
  #endif
  void set_opt(const char* value);
  void set_opt(const char* value, size_t size);
  ::std::string* mutable_opt();
  ::std::string* release_opt();
  void set_allocated_opt(::std::string* opt);

  // required int32 num1 = 1;
  bool has_num1() const;
  void clear_num1();
  static const int kNum1FieldNumber = 1;
  ::google::protobuf::int32 num1() const;
  void set_num1(::google::protobuf::int32 value);

  // required int32 num2 = 2;
  bool has_num2() const;
  void clear_num2();
  static const int kNum2FieldNumber = 2;
  ::google::protobuf::int32 num2() const;
  void set_num2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:example.myRequest)
 private:
  void set_has_num1();
  void clear_has_num1();
  void set_has_num2();
  void clear_has_num2();
  void set_has_opt();
  void clear_has_opt();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr opt_;
  ::google::protobuf::int32 num1_;
  ::google::protobuf::int32 num2_;
  friend struct ::protobuf_mytest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class myResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:example.myResponse) */ {
 public:
  myResponse();
  virtual ~myResponse();

  myResponse(const myResponse& from);

  inline myResponse& operator=(const myResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  myResponse(myResponse&& from) noexcept
    : myResponse() {
    *this = ::std::move(from);
  }

  inline myResponse& operator=(myResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const myResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const myResponse* internal_default_instance() {
    return reinterpret_cast<const myResponse*>(
               &_myResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(myResponse* other);
  friend void swap(myResponse& a, myResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline myResponse* New() const final {
    return CreateMaybeMessage<myResponse>(NULL);
  }

  myResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<myResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const myResponse& from);
  void MergeFrom(const myResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(myResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ans = 1;
  bool has_ans() const;
  void clear_ans();
  static const int kAnsFieldNumber = 1;
  ::google::protobuf::int32 ans() const;
  void set_ans(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:example.myResponse)
 private:
  void set_has_ans();
  void clear_has_ans();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 ans_;
  friend struct ::protobuf_mytest_2eproto::TableStruct;
};
// ===================================================================

class myService_Stub;

class myService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline myService() {};
 public:
  virtual ~myService();

  typedef myService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void calcute(::google::protobuf::RpcController* controller,
                       const ::example::myRequest* request,
                       ::example::myResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(myService);
};

class myService_Stub : public myService {
 public:
  myService_Stub(::google::protobuf::RpcChannel* channel);
  myService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~myService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements myService ------------------------------------------

  void calcute(::google::protobuf::RpcController* controller,
                       const ::example::myRequest* request,
                       ::example::myResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(myService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// myRequest

// required int32 num1 = 1;
inline bool myRequest::has_num1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void myRequest::set_has_num1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void myRequest::clear_has_num1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void myRequest::clear_num1() {
  num1_ = 0;
  clear_has_num1();
}
inline ::google::protobuf::int32 myRequest::num1() const {
  // @@protoc_insertion_point(field_get:example.myRequest.num1)
  return num1_;
}
inline void myRequest::set_num1(::google::protobuf::int32 value) {
  set_has_num1();
  num1_ = value;
  // @@protoc_insertion_point(field_set:example.myRequest.num1)
}

// required int32 num2 = 2;
inline bool myRequest::has_num2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void myRequest::set_has_num2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void myRequest::clear_has_num2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void myRequest::clear_num2() {
  num2_ = 0;
  clear_has_num2();
}
inline ::google::protobuf::int32 myRequest::num2() const {
  // @@protoc_insertion_point(field_get:example.myRequest.num2)
  return num2_;
}
inline void myRequest::set_num2(::google::protobuf::int32 value) {
  set_has_num2();
  num2_ = value;
  // @@protoc_insertion_point(field_set:example.myRequest.num2)
}

// required string opt = 3;
inline bool myRequest::has_opt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void myRequest::set_has_opt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void myRequest::clear_has_opt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void myRequest::clear_opt() {
  opt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_opt();
}
inline const ::std::string& myRequest::opt() const {
  // @@protoc_insertion_point(field_get:example.myRequest.opt)
  return opt_.GetNoArena();
}
inline void myRequest::set_opt(const ::std::string& value) {
  set_has_opt();
  opt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:example.myRequest.opt)
}
#if LANG_CXX11
inline void myRequest::set_opt(::std::string&& value) {
  set_has_opt();
  opt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:example.myRequest.opt)
}
#endif
inline void myRequest::set_opt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_opt();
  opt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:example.myRequest.opt)
}
inline void myRequest::set_opt(const char* value, size_t size) {
  set_has_opt();
  opt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:example.myRequest.opt)
}
inline ::std::string* myRequest::mutable_opt() {
  set_has_opt();
  // @@protoc_insertion_point(field_mutable:example.myRequest.opt)
  return opt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* myRequest::release_opt() {
  // @@protoc_insertion_point(field_release:example.myRequest.opt)
  if (!has_opt()) {
    return NULL;
  }
  clear_has_opt();
  return opt_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void myRequest::set_allocated_opt(::std::string* opt) {
  if (opt != NULL) {
    set_has_opt();
  } else {
    clear_has_opt();
  }
  opt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), opt);
  // @@protoc_insertion_point(field_set_allocated:example.myRequest.opt)
}

// -------------------------------------------------------------------

// myResponse

// required int32 ans = 1;
inline bool myResponse::has_ans() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void myResponse::set_has_ans() {
  _has_bits_[0] |= 0x00000001u;
}
inline void myResponse::clear_has_ans() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void myResponse::clear_ans() {
  ans_ = 0;
  clear_has_ans();
}
inline ::google::protobuf::int32 myResponse::ans() const {
  // @@protoc_insertion_point(field_get:example.myResponse.ans)
  return ans_;
}
inline void myResponse::set_ans(::google::protobuf::int32 value) {
  set_has_ans();
  ans_ = value;
  // @@protoc_insertion_point(field_set:example.myResponse.ans)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace example

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_mytest_2eproto
